<UserControl x:Class="Test_TaskModel_Viewer.Controls.GraphCalendar"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
			 xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
			 xmlns:local="clr-namespace:Test_TaskModel_Viewer.Controls"
			 xmlns:cl="clr-namespace:Test_TaskModel_Viewer.Classes"
			 xmlns:conv="clr-namespace:Test_TaskModel_Viewer.Converters"
			 xmlns:ext="clr-namespace:Test_TaskModel_Viewer.Extensions"
			 mc:Ignorable="d" Name="Control"
			 d:DesignHeight="450" d:DesignWidth="800">

	<UserControl.Resources>

		<conv:ModelToGraphConverter x:Key="ModelToGraphConverter"/>
		<conv:SelectTimeRange x:Key="SelectTimeRange"/>

		<DataTemplate x:Key="HeaderTemplate">
			<DataTemplate.Resources>
				<Style TargetType="Border">
					<Setter Property="BorderBrush" Value="Black"/>
					<Setter Property="BorderThickness" Value="1"/>
					<Setter Property="Margin" Value="-0.5"/>
					<Setter Property="MinWidth" Value="25"/>
				</Style>
				<Style TargetType="TextBlock">
					<Setter Property="HorizontalAlignment" Value="Center"/>
				</Style>
			</DataTemplate.Resources>
			<Grid Name="Grid">
				<Grid.RowDefinitions>
					<RowDefinition/>
					<RowDefinition/>
				</Grid.RowDefinitions>
				<Grid.ColumnDefinitions>
					<ColumnDefinition/>
					<ColumnDefinition/>
					<ColumnDefinition/>
				</Grid.ColumnDefinitions>

				<Border Grid.ColumnSpan="3">
					<TextBlock Text="{Binding StringFormat={}MMM-yy}" Language="ru-RU"/>
				</Border>

				<Border Grid.Row="1" Grid.Column="0">
					<TextBlock Text="1"/>
				</Border>

				<Border Grid.Row="1" Grid.Column="1">
					<TextBlock Text="11"/>
				</Border>

				<Border Grid.Row="1" Grid.Column="2">
					<TextBlock  Text="21"/>
				</Border>
			</Grid>
			<DataTemplate.Triggers>
				<Trigger Property="Content" Value="{x:Null}">
					<Setter TargetName="Grid" Property="Visibility" Value="Collapsed"/>
				</Trigger>
			</DataTemplate.Triggers>
		</DataTemplate>

		<Style x:Key="HeaderStyle" TargetType="GridViewColumnHeader">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
						<Border BorderBrush="Black" BorderThickness="0.1" Padding="0,0.5">
							<ContentControl Content="{TemplateBinding Content}" 
											ContentTemplate="{StaticResource HeaderTemplate}"/>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<DataTemplate x:Key="Popup">
			<Popup StaysOpen="False" Placement="Left" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
		       Tag="{Binding Tag, RelativeSource={RelativeSource FindAncestor, AncestorType=ContentControl}}">
				<Border Background="White">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition/>
						</Grid.RowDefinitions>
						<Grid.ColumnDefinitions>
							<ColumnDefinition/>
							<ColumnDefinition Width="Auto"/>
						</Grid.ColumnDefinitions>

						<Button Grid.Column="1" Content="X" Padding="1"
						        Click="ClosePopupClick"
						        Tag="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=Popup}}"/>

						<StackPanel Grid.RowSpan="2" Orientation="Vertical" Margin="5">
							<TextBlock>
								<TextBlock.Text>
									<MultiBinding Converter="{StaticResource SelectTimeRange}">
										<Binding Path="" RelativeSource="{RelativeSource FindAncestor,AncestorLevel=3,AncestorType=ContentControl}"/>
										<Binding Path="Tag" RelativeSource="{RelativeSource FindAncestor, AncestorType=Popup}"/>
									</MultiBinding>
								</TextBlock.Text>
							</TextBlock>
							<TextBlock Text="{Binding Name, StringFormat=Уровень {0:0}}"/>
						</StackPanel>
					</Grid>
				</Border>
			</Popup>
		</DataTemplate>

		<DataTemplate DataType="{x:Type cl:ModelRelation}">
			<Grid>
				<Grid.Resources>
					<Style x:Key="BtnStyle" TargetType="Button">
						<Setter Property="AllowDrop" Value="True"/>
						<EventSetter Event="Drop" Handler="EndChangeRange"/>
						<Setter Property="Width" Value="45"/>
						<Setter Property="Height" Value="20"/>
						<EventSetter Event="Click" Handler="OpenPopupClick"/>
						<EventSetter Event="PreviewMouseLeftButtonDown" Handler="StartChangeRange"/>
						<!--<EventSetter Event="MouseLeftButtonUp" Handler="EndChangeRange"></EventSetter>-->
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="Button">
									<Border Name="Border"
											BorderBrush="Black" BorderThickness="1"
									        Background="{TemplateBinding Background}">
										<ContentControl Content="{Binding}" 
										                ContentTemplate="{StaticResource Popup}"
										                Tag="{TemplateBinding Tag}"/>
									</Border>

								</ControlTemplate>
							</Setter.Value>
						</Setter>
						<Setter Property="ext:AttachedProperties.IsChecked">
							<Setter.Value>
								<MultiBinding Converter="{StaticResource ModelToGraphConverter}">
									<Binding Path="GraphRange" Mode="OneWay"/>
									<Binding Path="" RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=ContentControl}"/>
									<Binding Path="Tag" RelativeSource="{RelativeSource Self}"/>
								</MultiBinding>
							</Setter.Value>
						</Setter>
						<Style.Triggers>
							<Trigger Property="ext:AttachedProperties.IsChecked" Value="True">
								<Setter Property="Background" Value="Green"/>
							</Trigger>
							<Trigger Property="ext:AttachedProperties.IsChecked" Value="False">
								<Setter Property="Background" Value="DarkRed"/>
							</Trigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsMouseOver" Value="True"/>
									<Condition Property="ext:AttachedProperties.IsChecked" Value="True"/>
								</MultiTrigger.Conditions>
								<Setter Property="Background" Value="LimeGreen"/>
							</MultiTrigger>
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsMouseOver" Value="True"/>
									<Condition Property="ext:AttachedProperties.IsChecked" Value="False"/>
								</MultiTrigger.Conditions>
								<Setter Property="Background" Value="Red"/>
							</MultiTrigger>
						</Style.Triggers>
					</Style>
				</Grid.Resources>
				<Grid.ColumnDefinitions>
					<ColumnDefinition/>
					<ColumnDefinition/>
					<ColumnDefinition/>
				</Grid.ColumnDefinitions>

				<Button Tag="1" Style="{StaticResource BtnStyle}"/>
				<Button Grid.Column="1" Tag="11" Style="{StaticResource BtnStyle}"/>
				<Button Grid.Column="2" Tag="21" Style="{StaticResource BtnStyle}"/>

			</Grid>
		</DataTemplate>

	</UserControl.Resources>


	<ListView ItemsSource="{Binding ModelRelation.GetAllRelations, ElementName=Control}"
			  ScrollViewer.HorizontalScrollBarVisibility="Disabled"
			  ScrollViewer.VerticalScrollBarVisibility="Auto"
			  VirtualizingPanel.IsVirtualizing="True" 
			  VirtualizingPanel.ScrollUnit="Pixel"
			  VirtualizingPanel.IsContainerVirtualizable="True"
	          BorderThickness="0" Name="list">
		<ListView.ItemContainerStyle>
			<Style TargetType="ListViewItem">
				<Style.Triggers>
					<DataTrigger Binding="{Binding IsShow}" Value="False">
						<Setter Property="Visibility" Value="Collapsed"/>
					</DataTrigger>
					<DataTrigger Binding="{Binding IsShow}" Value="True">
						<Setter Property="Visibility" Value="Visible"/>
					</DataTrigger>
				</Style.Triggers>
			</Style>
		</ListView.ItemContainerStyle>
		<ListView.View>
			<GridView x:Name="View" ColumnHeaderContainerStyle="{StaticResource HeaderStyle}"/>
		</ListView.View>
	</ListView>

</UserControl>







